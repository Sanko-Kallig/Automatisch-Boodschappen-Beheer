Drop TABLE WIJZIGING cascade constraints;
DROP TABLE GROEP cascade constraints;
DROP TABLE Boodschappenlijst cascade constraints;
DROP TABLE Product cascade constraints;
DROP table Gebruiker cascade constraints;
DROP TABLE Boodschappenlijst_Producten cascade constraints;
DROP TABLE Groep_Gebruikers cascade constraints;
DROP TABLE GROEP_EIGENAAR cascade constraints;

--------------------------------------------------------
--  DDL for Sequence FUNCTIE_FCSEQ
--------------------------------------------------------
   CREATE SEQUENCE  "GEBRUIKER_FCSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 20 NOORDER  NOCYCLE ;
   
--------------------------------------------------------
--  DDL for Sequence FUNCTIE_FCSEQ
--------------------------------------------------------
   CREATE SEQUENCE  "PRODUCT_FCSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence FUNCTIE_FCSEQ
--------------------------------------------------------
   CREATE SEQUENCE  "WIJZIGINGEN_FCSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence BOODSCHAPPENLIJST_FCSEQ
--------------------------------------------------------
   CREATE SEQUENCE  "BOODSCHAPPENLIJST_FCSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 20 NOORDER  NOCYCLE ;
      
Create TABLE Gebruiker(
ID			NUMBER(10)			PRIMARY KEY,
Email		VARCHAR2(30)		NOT NULL UNIQUE,
Wachtwoord 	VARCHAR2(30) 	NOT NULL,
Naam		VARCHAR2(30)	NOT NULL,
status 		NUMBER(1)       DEFAULT 1     CHECK (status BETWEEN 0 AND 1),
rol       VARCHAR2(10)    DEFAULT 'User'  CHECK(rol IN ('Admin', 'User'))

);

CREATE TABLE GROEP(
ID			VARCHAR2(10)		PRIMARY KEY,
Naam		VARCHAR2(30)	NOT NULL UNIQUE,  
status  NUMBER(1)     DEFAULT 1       CHECK (status BETWEEN 0 AND 1)
);

CREATE TABLE PRODUCT(
ID				NUMBER(10)		PRIMARY KEY,
Naam			VARCHAR2(30)	NOT NULL,
PRIJS			Decimal(10,2) 	NOT NULL,
Imgurl			VARCHAR2(50)	NULL,
LaastGewijzigd	DATE		NULL
);

CREATE TABLE BOODSCHAPPENLIJST(
ID				NUMBER(10)		PRIMARY KEY,
GROEP_ID		VARCHAR2(10)		NOT NULL,
TotaalPrijs		Decimal(10,2)	NULL,
STARTDATUM    DATE        NOT NULL,
EINDDATUM     DATE        NULL
);

CREATE TABLE GROEP_GEBRUIKERS(
GROEP_ID      VARCHAR2(10)		NOT NULL,
GEBRUIKER_ID  NUMBER(10)		NOT NULL,
CONSTRAINT  pk_GroepGebruiker PRIMARY KEY(GROEP_ID, GEBRUIKER_ID)
);

CREATE TABLE BOODSCHAPPENLIJST_PRODUCTEN(
BOODSCHAPPENLIJST_ID	NUMBER(10)	NOT NULL,
PRODUCT_ID		NUMBER(10)		NOT NULL,
GEBRUIKER_ID		NUMBER(10)		NOT NULL,
CONSTRAINT	pk_BOODSCHAPPRODUCT PRIMARY KEY(BOODSCHAPPENLIJST_ID, Gebruiker_ID)
);

CREATE TABLE WIJZIGING(
ID				NUMBER(10)		PRIMARY KEY,
PRODUCT_ID		NUMBER(10)		NOT NULL,
GEBRUIKER_ID		NUMBER(10)		NOT NULL,
WIJZIGING		VARCHAR2(500)	NULL,
DATUM			DATE			NULL
);

CREATE TABLE GROEP_EIGENAAR(
GROEP_ID        NUMBER(10) NOT NULL,
GEBRUIKER_ID    NUMBER(10)  NOT NULL,
constraint pk_GroepEigenaar PRIMARY KEY(GROEP_ID, GEBRUIKER_ID)
);

ALTER TABLE GROEP_GEBRUIKERS				ADD FOREIGN KEY (GROEP_ID) REFERENCES GROEP(ID);
ALTER TABLE GROEP_GEBRUIKERS				ADD FOREIGN KEY (GEBRUIKER_ID) REFERENCES GEBRUIKER(ID);
ALTER TABLE BOODSCHAPPENLIJST_PRODUCTEN ADD FOREIGN KEY (BOODSCHAPPENLIJST_ID) REFERENCES BOODSCHAPPENLIJST(ID);
ALTER TABLE BOODSCHAPPENLIJST_PRODUCTEN ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID);
ALTER TABLE BOODSCHAPPENLIJST_PRODUCTEN ADD FOREIGN KEY (GEBRUIKER_ID) REFERENCES GEBRUIKER(ID);
ALTER TABLE BOODSCHAPPENLIJST 			ADD FOREIGN KEY (GROEP_ID) REFERENCES GROEP(ID);
ALTER TABLE WIJZIGING					ADD FOREIGN KEY(PRODUCT_ID)	REFERENCES PRODUCT(ID);
ALTER TABLE WIJZIGING 					ADD FOREIGN KEY (GEBRUIKER_ID) REFERENCES GEBRUIKER(ID);
ALTER TABLE GROEP_EIGENAAR          ADD FOREIGN KEY (GROEP_ID) REFERENCES GROEP(ID);
ALTER TABLE GROEP_EIGENAAR          ADD FOREIGN KEY (GEBRUIKER_ID)  REFERENCES GEBRUIKER(ID);


INSERT INTO GEBRUIKER(ID, EMAIL, WACHTWOORD, NAAM, STATUS)	VALUES	(1, 'admin@admin.nl', 'Testwachtwoord', 'Admin', 1);
INSERT INTO GEBRUIKER(ID, EMAIL, WACHTWOORD, NAAM, STATUS)	VALUES	(2, 'annie@test.nl', 'Wachtwoord1', 'Annie', 1);
INSERT INTO GEBRUIKER(ID, EMAIL, WACHTWOORD, NAAM, STATUS)	VALUES	(3, 'Derick@test.nl', 'Wachtwoord2', 'Rick', 1);

INSERT INTO GROEP(ID, NAAM) VALUES (1, 'testgroep');

INSERT INTO GROEP_EIGENAAR(GROEP_ID, GEBRUIKER_ID) VALUES (1, 2);

INSERT INTO GROEP_GEBRUIKERS(GEBRUIKER_ID, GROEP_ID) VALUES (2,1);
INSERT INTO GROEP_GEBRUIKERS(GEBRUIKER_ID, GROEP_ID) VALUES (3, 1);

DROP SEQUENCE "SEQ_GEBRUIKERID";
DROP SEQUENCE "SEQ_PRODUCTID";
DROP SEQUENCE "SEQ_BOODSCHAPPENLIJSTID";
DROP SEQUENCE "SEQ_WIJZIGINGID";


CREATE SEQUENCE  "SEQ_GEBRUIKERID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE  "SEQ_PRODUCTID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 6 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE  "SEQ_BOODSCHAPPENLIJSTID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;
CREATE SEQUENCE  "SEQ_WIJZIGINGID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3 CACHE 20 NOORDER NOCYCLE;

--------------------------------------------------------
--  DDL for Trigger GEBRUIKER_FCTG_BI
--------------------------------------------------------
  CREATE OR REPLACE TRIGGER "GEBRUIKER_FCTG_BI" BEFORE INSERT ON "GEBRUIKER"
FOR EACH ROW
 WHEN (new."ID" IS NULL) BEGIN
  SELECT GEBRUIKER_FCSEQ.NEXTVAL INTO :new."ID" FROM dual;
END;
/
ALTER TRIGGER "GEBRUIKER_FCTG_BI" ENABLE;

--------------------------------------------------------
--  DDL for Trigger GEBRUIKER_FCTG_BI
--------------------------------------------------------
  CREATE OR REPLACE TRIGGER "PRODUCT_FCTG_BI" BEFORE INSERT ON "PRODUCT"
FOR EACH ROW
 WHEN (new."ID" IS NULL) BEGIN
  SELECT PRODUCT_FCSEQ.NEXTVAL INTO :new."ID" FROM dual;
END;
/
ALTER TRIGGER "PRODUCT_FCTG_BI" ENABLE;

--------------------------------------------------------
--  DDL for Trigger GEBRUIKER_FCTG_BI
--------------------------------------------------------
  CREATE OR REPLACE TRIGGER "WIJZIGING_FCTG_BI" BEFORE INSERT ON "WIJZIGING"
FOR EACH ROW
 WHEN (new."ID" IS NULL) BEGIN
  SELECT WIJZIGING_FCSEQ.NEXTVAL INTO :new."ID" FROM dual;
END;
/
ALTER TRIGGER "WIJZIGING_FCTG_BI" ENABLE;


--------------------------------------------------------
--  DDL for Trigger GEBRUIKER_FCTG_BI
--------------------------------------------------------
  CREATE OR REPLACE TRIGGER "BOODSCHAPPENLIJST_FCTG_BI" BEFORE INSERT ON "BOODSCHAPPENLIJST"
FOR EACH ROW
 WHEN (new."ID" IS NULL) BEGIN
  SELECT BOODSCHAPPENLIJST_FCSEQ.NEXTVAL INTO :new."ID" FROM dual;
END;
/
ALTER TRIGGER "BOODSCHAPPENLIJST_FCTG_BI" ENABLE;

COMMIT;